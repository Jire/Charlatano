/*
 * Charlatano: Free and open-source (FOSS) cheat for CS:GO/CS:CO
 * Copyright (C) 2017 - Thomas G. P. Nappo, Jonathan Beaudoin
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.charlatano.game.entity

import com.charlatano.game.CSGO.csgoEXE
import org.jire.arrowhead.unsign

enum class EntityType(val id: Long, val weapon: Boolean = false, val grenade: Boolean = false) {
	
	NULL(-1),
	NextBotCombatCharacter(0),
	CAK47(1, weapon = true),
	CBaseAnimating(2),
	CBaseAnimatingOverlay(3),
	CBaseAttributableItem(4),
	CBaseButton(5),
	CBaseCombatCharacter(6),
	CBaseCombatWeapon(7),
	CBaseCSGrenade(8, grenade = true),
	CBaseCSGrenadeProjectile(9, grenade = true),
	CBaseDoor(10),
	CBaseEntity(11),
	CBaseFlex(12),
	CBaseGrenade(13),
	CBaseParticleEntity(14),
	CBasePlayer(15),
	CBasePropDoor(16),
	CBaseTeamObjectiveResource(17),
	CBaseTempEntity(18),
	CBaseToggle(19),
	CBaseTrigger(20),
	CBaseViewModel(21),
	CBaseVPhysicsTrigger(22),
	CBaseWeaponWorldModel(23),
	CBeam(24),
	CBeamSpotlight(25),
	CBoneFollower(26),
	CBreakableProp(27),
	CBreakableSurface(28),
	CC4(29),
	CCascadeLight(30),
	CChicken(31),
	CColorCorrection(32),
	CColorCorrectionVolume(33),
	CCSGameRulesProxy(34),
	CCSPlayer(35),
	CCSPlayerResource(36),
	CCSRagdoll(37),
	CCSTeam(38),
	CDEagle(39, weapon = true),
	CDecoyGrenade(40, grenade = true),
	CDecoyProjectile(41, grenade = true),
	CDynamicLight(42),
	CDynamicProp(43),
	CEconEntity(44),
	CEconWearable(45),
	CEmbers(46),
	CEntityDissolve(47),
	CEntityFlame(48),
	CEntityFreezing(49),
	CEntityParticleTrail(50),
	CEnvAmbientLight(51),
	CEnvDetailController(52),
	CEnvDOFController(53),
	CEnvParticleScript(54),
	CEnvProjectedTexture(55),
	CEnvQuadraticBeam(56),
	CEnvScreenEffect(57),
	CEnvScreenOverlay(58),
	CEnvTonemapController(59),
	CEnvWind(60),
	CFEPlayerDecal(61),
	CFireCrackerBlast(62),
	CFireSmoke(63),
	CFireTrail(64),
	CFish(65),
	CFlashbang(66, grenade = true),
	CFogController(67),
	CFootstepControl(68),
	CFunc_Dust(69),
	CFunc_LOD(70),
	CFuncAreaPortalWindow(71),
	CFuncBrush(72),
	CFuncConveyor(73),
	CFuncLadder(74),
	CFuncMonitor(75),
	CFuncMoveLinear(76),
	CFuncOccluder(77),
	CFuncReflectiveGlass(78),
	CFuncRotating(79),
	CFuncSmokeVolume(80),
	CFuncTrackTrain(81),
	CGameRulesProxy(82),
	CHandleTest(83),
	CHEGrenade(84, grenade = true),
	CHostage(85),
	CHostageCarriableProp(86),
	CIncendiaryGrenade(87, grenade = true),
	CInferno(88),
	CInfoLadderDismount(89),
	CInfoOverlayAccessor(90),
	CItem_Healthshot(91),
	CItem_Dogtags(92),
	CKnife(93),
	CKnifeGG(94),
	CLightGlow(95),
	CMaterialModifyControl(96),
	CMolotovGrenade(97, grenade = true),
	CMolotovProjectile(98, grenade = true),
	CMovieDisplay(99),
	CParticleFire(100),
	CParticlePerformanceMonitor(101),
	CParticleSystem(102),
	CPhysBox(103),
	CPhysBoxMultiplayer(104),
	CPhysicsProp(105),
	CPhysicsPropMultiplayer(106),
	CPhysMagnet(107),
	CPlantedC4(108),
	CPlasma(109),
	CPlayerResource(110),
	CPointCamera(111),
	CPointCommentaryNode(112),
	CPointWorldText(113),
	CPoseController(114),
	CPostProcessController(115),
	CPrecipitation(116),
	CPrecipitationBlocker(117),
	CPredictedViewModel(118),
	CProp_Hallucination(119),
	CPropDoorRotating(120),
	CPropJeep(121),
	CPropVehicleDriveable(122),
	CRagdollManager(123),
	CRagdollProp(124),
	CRagdollPropAttached(125),
	CRopeKeyframe(126),
	CSCAR17(127, weapon = true),
	CSceneEntity(128),
	CSensorGrenade(129),
	CSensorGrenadeProjectile(130),
	CShadowControl(131),
	CSlideshowDisplay(132),
	CSmokeGrenade(133, grenade = true),
	CSmokeGrenadeProjectile(134, grenade = true),
	CSmokeStack(135),
	CSpatialEntity(136),
	CSpotlightEnd(137),
	CSprite(138),
	CSpriteOriented(139),
	CSpriteTrail(140),
	CStatueProp(141),
	CSteamJet(142),
	CSun(143),
	CSunlightShadowControl(144),
	CTeam(145),
	CTeamplayRoundBasedRulesProxy(146),
	CTEArmorRicochet(147),
	CTEBaseBeam(148),
	CTEBeamEntPoint(149),
	CTEBeamEnts(150),
	CTEBeamFollow(151),
	CTEBeamLaser(152),
	CTEBeamPoints(153),
	CTEBeamRing(154),
	CTEBeamRingPoint(155),
	CTEBeamSpline(156),
	CTEBloodSprite(157),
	CTEBloodStream(158),
	CTEBreakModel(159),
	CTEBSPDecal(160),
	CTEBubbles(161),
	CTEBubbleTrail(162),
	CTEClientProjectile(163),
	CTEDecal(164),
	CTEDust(165),
	CTEDynamicLight(166),
	CTEEffectDispatch(167),
	CTEEnergySplash(168),
	CTEExplosion(169),
	CTEFireBullets(170),
	CTEFizz(171),
	CTEFootprintDecal(172),
	CTEFoundryHelpers(173),
	CTEGaussExplosion(174),
	CTEGlowSprite(175),
	CTEImpact(176),
	CTEKillPlayerAttachments(177),
	CTELargeFunnel(178),
	CTEMetalSparks(179),
	CTEMuzzleFlash(180),
	CTEParticleSystem(181),
	CTEPhysicsProp(182),
	CTEPlantBomb(183),
	CTEPlayerAnimEvent(184),
	CTEPlayerDecal(185),
	CTEProjectedDecal(186),
	CTERadioIcon(187),
	CTEShatterSurface(188),
	CTEShowLine(189),
	CTesla(190),
	CTESmoke(191),
	CTESparks(192),
	CTESprite(193),
	CTESpriteSpray(194),
	CTest_ProxyToggle_Networkable(195),
	CTestTraceline(196),
	CTEWorldDecal(197),
	CTriggerPlayerMovement(198),
	CTriggerSoundOperator(199),
	CVGuiScreen(200),
	CVoteController(201),
	CWaterBullet(202),
	CWaterLODControl(203),
	CWeaponAug(204, weapon = true),
	CWeaponAWP(205, weapon = true),
	CWeaponBaseItem(206),
	CWeaponBizon(207, weapon = true),
	CWeaponCSBase(208),
	CWeaponCSBaseGun(209),
	CWeaponCycler(210),
	CWeaponElite(211, weapon = true),
	CWeaponFamas(212, weapon = true),
	CWeaponFiveSeven(213, weapon = true),
	CWeaponG3SG1(214, weapon = true),
	CWeaponGalil(215, weapon = true),
	CWeaponGalilAR(216, weapon = true),
	CWeaponGlock(217, weapon = true),
	CWeaponHKP2000(218, weapon = true),
	CWeaponM249(219, weapon = true),
	CWeaponM3(220, weapon = true),
	CWeaponM4A1(221, weapon = true),
	CWeaponMAC10(222, weapon = true),
	CWeaponMag7(223, weapon = true),
	CWeaponMP5Navy(224, weapon = true),
	CWeaponMP7(225, weapon = true),
	CWeaponMP9(226, weapon = true),
	CWeaponNegev(227, weapon = true),
	CWeaponNOVA(228, weapon = true),
	CWeaponP228(229, weapon = true),
	CWeaponP250(230, weapon = true),
	CWeaponP90(231, weapon = true),
	CWeaponSawedoff(232, weapon = true),
	CWeaponSCAR20(233, weapon = true),
	CWeaponScout(234, weapon = true),
	CWeaponSG550(235, weapon = true),
	CWeaponSG552(236, weapon = true),
	CWeaponSG556(237, weapon = true),
	CWeaponSSG08(238, weapon = true),
	CWeaponTaser(239),
	CWeaponTec9(240, weapon = true),
	CWeaponTMP(241, weapon = true),
	CWeaponUMP45(242, weapon = true),
	CWeaponUSP(243, weapon = true),
	CWeaponXM1014(244, weapon = true),
	CWorld(245),
	DustTrail(246),
	MovieExplosion(247),
	ParticleSmokeGrenade(248, grenade = true),
	RocketTrail(249),
	SmokeTrail(250),
	SporeExplosion(251),
	SporeTrail(252);
	
	companion object {
		
		val cachedValues = values()
		
		val size = cachedValues.size
		
		fun byID(id: Long) = cachedValues.firstOrNull { it.id == id }
		
		fun byEntityAddress(address: Long): EntityType {
			val vt = (csgoEXE.read(address + 0x8, 4) ?: return NULL).getInt(0).unsign()
			val fn = (csgoEXE.read(vt + 2 * 0x4, 4) ?: return NULL).getInt(0).unsign()
			val cls = (csgoEXE.read(fn + 0x1, 4) ?: return NULL).getInt(0).unsign()
			val clsid = (csgoEXE.read(cls + 20, 4) ?: return NULL).getInt(0).unsign()
			return byID(clsid) ?: NULL
		}
		
	}
	
}
